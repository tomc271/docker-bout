# ================================================================================
#             Dockerfile to setup build environment for BOUT-next build
#
# Build example: sudo docker build -t boutproject/bout-next:a4f453c -f bout-next.dkr .
#  
# ================================================================================
FROM ubuntu:22.04
MAINTAINER Jarrod Leddy "jleddy@txcorp.com"

# ----------------------------------------------------------------
# Convenient network/system tools, python, dependencies
# ----------------------------------------------------------------
RUN apt-get update
RUN apt-get install -y git g++ gcc wget\
 libmpich-dev libfftw3-dev libnetcdf-c++4-dev make libhdf5-mpich-dev libblas-dev liblapack-dev cmake zlib1g \
 && apt-get clean

# ----------------------------------------------------------------
# Python
# ----------------------------------------------------------------
RUN apt-get install -y python3 python3-pip \
    && python3 -m pip install numpy scipy netcdf4 matplotlib 

# ----------------------------------------------------------------
# Get BOUT++ dependencies
# ----------------------------------------------------------------

#####################
# Install SUNDIALS

WORKDIR /
RUN wget https://github.com/LLNL/sundials/releases/download/v5.4.0/sundials-5.4.0.tar.gz \
 && tar -xzvf sundials-5.4.0.tar.gz \
 && rm sundials-5.4.0.tar.gz \
 && cd sundials-5.4.0 \
 && mkdir build \
 && mkdir -p /usr/examples \
 && cd build/ \
 && cmake .. \
  -DCMAKE_INSTALL_PREFIX=/usr/ \
  -DEXAMPLES_INSTALL_PATH=/usr/examples \
  -DCMAKE_LINKER=/usr/lib \
  -DLAPACK_ENABLE=ON \
  -DOPENMP_ENABLE=ON \
  -DBUILD_SHARED_LIBS=ON \
  -DMPI_ENABLE=ON \
  -DCMAKE_C_COMPILER=$(which mpicc) \
  -DCMAKE_CXX_COMPILER=$(which mpicxx) \
  ../  \
 && make \
 && make install \
 && cd / \
 && rm -r sundials-5.4.0

#####################
# Install PETSC

WORKDIR /
RUN apt-get install -y bison flex \
 && wget https://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-3.17.5.tar.gz \
 && tar -xvzf petsc-3.17.5.tar.gz \
 && cd petsc-3.17.5/ \
 && ./configure \
  --with-mpi=yes \
  --with-precision=double \
  --with-scalar-type=real \
  --with-shared-libraries=1 \
  --with-debugging=0 \
  {C,CXX,F}OPTFLAGS="-O3 -march=native" \
  --prefix=$HOME/local/petsc-version-options \
  --download-mumps --download-scalapack --download-blacs --download-fblaslapack=1 \
  --download-parmetis --download-ptscotch --download-metis \	
 && make -f /petsc-3.17.5/makefile all \
 && make -f /petsc-3.17.5/makefile PETSC_DIR=/petsc-3.17.5 PETSC_ARCH=arch-linux-c-opt test \
 && ln -s /petsc-3.17.5/arch-linux-c-opt/include/* /usr/include/ \
 && ln -s /petsc-3.17.5/arch-linux-c-opt/lib/*a /usr/lib/ \
 && ln -s /petsc-3.17.5/arch-linux-c-opt/lib/modules/* /usr/lib/modules/ \
 && cd /petsc-3.17.5/arch-linux-c-opt/ \
 && rm -r externalpackages obj \
 && cd /petsc-3.17.5/ \
 && rm -r src

ENV PETSC_DIR=/petsc-3.17.5/
ENV PETSC_ARCH=arch-linux-c-opt

#####################
# Install SLEPC
WORKDIR /
RUN wget http://slepc.upv.es/download/distrib/slepc-3.9.2.tar.gz \
 && tar xzf slepc-3.9.2.tar.gz \
 && rm slepc-3.9.2.tar.gz \
 && cd slepc-3.9.2/ \
 && ./configure \
 && make SLEPC_DIR=$PWD PETSC_DIR=/petsc-3.17.5/ PETSC_ARCH=arch-linux-c-opt \
 && export SLEPC_DIR=/slepc-3.9.2 \
 && make test \
 && rm -r /slepc-3.9.2/arch-linux-c-opt/obj \
 && rm -r /slepc-3.9.2/src
 
ENV SLEPC_DIR=/slepc-3.9.2

#####################
# Install NETCDF
WORKDIR /
RUN apt-get install -y zlib1g libhdf5-mpich-dev \
 && wget https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-4.6.1.tar.gz \
 && tar -xzvf netcdf-4.6.1.tar.gz \
 && rm netcdf-4.6.1.tar.gz \
 && cd /netcdf-4.6.1/ \
 && ./configure --prefix=/usr/local --disable-dap --enable-parallel --enable-shared \
 && make \
 && make install \
 && cd / \
 && rm -r netcdf-4.6.1

#####################
# Install NETCDF-cxx
WORKDIR /

RUN wget https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-cxx4-4.3.0.tar.gz \
 && tar -xzvf netcdf-cxx4-4.3.0.tar.gz \
 && rm netcdf-cxx4-4.3.0.tar.gz \
 && cd netcdf-cxx4-4.3.0/ \
 && ./configure --prefix=/usr/local --enable-shared \
 && make \
 && make install \
 && cd / \
 && rm -r netcdf-cxx4-4.3.0

####################
# Cython

RUN python3 -m pip install cython ipython

# ----------------------------------------------------------------
# Build and install BOUT++
# ----------------------------------------------------------------
# configure and build BOUT++ source code
RUN useradd -ms /bin/bash boutuser \
 && echo 'boutuser:boutforever' | chpasswd \
 && usermod -aG sudo boutuser

USER boutuser
WORKDIR /home/boutuser

RUN git clone -b next --depth 1 git://github.com/boutproject/BOUT-dev.git BOUT-next \
 && chown boutuser /home/boutuser/BOUT-next

WORKDIR /home/boutuser/BOUT-next

RUN ./configure --with-petsc PETSC_DIR=/petsc-3.17.5 PETSC_ARCH=arch-linux-c-opt --with-sundials=/usr/ --with-fftw --with-netcdf --enable-openmp --with-cvode --with-arkode --with-slepc --with-lapack LIBS="-llapack -lblas" --localedir=$PWD/locale --enable-shared \
 && make \
 && make python \
 && make clean-remove-object-files

ENV PYTHONPATH=/home/boutuser/BOUT-next/tools/pylib/:$PYTHONPATH
ENV PYTHONIOENCODING=utf-8

RUN git submodule update --init --recursive \
 && make check-unit-tests \
 && make clean-unit-tests \
 && rm tests/unit/serial_tests

#####################
# Make common folder for moving data to/from host
WORKDIR /home/boutuser
RUN mkdir bout-img-shared
